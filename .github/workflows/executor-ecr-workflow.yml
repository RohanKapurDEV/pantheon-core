name: Push executor API to ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "main"
    paths:
      - "backend/executor/**"
      - ".github/workflows/executor-ecr-workflow.yml"

  pull_request:
    branches:
      - "main"
    paths:
      - "backend/executor/**"
      - ".github/workflows/executor-ecr-workflow.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: pantheon-executor-api
          IMAGE_TAG: ${{ github.sha }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          MAINNET_HTTP_URL: ${{ secrets.MAINNET_HTTP_URL }}
          DEVNET_HTTP_URL: ${{ secrets.DEVNET_HTTP_URL }}
          CLUSTER: ${{ secrets.CLUSTER }}
          WALLET_PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
        run: |
          docker build -f backend/executor/Dockerfile backend/executor
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
